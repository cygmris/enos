+-------------------------------------+---------------------------+--------------------------+
| <Certificate Authority>             | <Server>                  | <Client>                 |
|   |                                 |	 |                        |   |                      |
|   |--> certs                        |	 |->certs, key, keycert   |   |->certs, key, keycert |
|   |     |->Copy of certs            |                           |                          |
|   |                                 |                           |                          |
|   |--> private                      |                           |                          |
|   |     |->CA private key           |                           |                          |
|   |                                 |                           |                          |
|   |->serial, index.txt. openssl.cnf |                           |                          |
+-------------------------------------+---------------------------+--------------------------+

1. a) Create directory <Certificate Authority>
   b) Create directories certs, private
   c) Create file serial (echo 01 > serial)
   d) Create empty file index.txt (touch index.txt)

2.    Create file openssl.cnf, put in openssl config info.

3. a) Generate private key and certificate
   	i) openssl req -x509 -config openssl.cnf -newkey rsa:2048 \
		    |->Create self signed cert
	   -days 365 -out cacert.pem -outform PEM -subj \CN=<NAME>\ -nodes
		|-> Days to certify cert			      |->Key not encrypted

4. a) Create directory <Server>
   b) Generate private key for server
	i) openssl genrsa -out key.pem 2048
   c) Create server certificate request
	i) openssl req -new -key key.pem -out req.pem -outform PEM \
	   -subj /CN=$(hostname)/O=server/ -nodes
   d) In <Certificate Authority>, sign the request and get signed certificate
	i) openssl ca -config openssl.cnf -in ../server/req.pem -out \
	   ../server/cert.pem -notext -batch -extensions server_ca_extensions
   e) Back in <Server>, create PKCS store that contains server certificate and key.
	i) openssl pkcs12 -export -out keycert.p12 in cert.pm inkey key.pem

5) a) Create directory <Client>
   b) Generate private key for client
	i) openssl genrsa -out key.pem 2048
   c) Create client certificate signing request
	i) openssl req -new -key key.pem -out req.pem outform PEM \
	   -subj /CN=$hostname)/O=client/ -nodes
   d) In <Certificate Authority>. sign the certificate.
	i) openssl -ca -config openssl.cnf -in ../client/req.pem -out \
           ../client/cert.pem -notext -batch -extensions client_ca_extensions
   e) Back in <Client>, create PKCS store that contains client certificate and key.
	i) openssl pkcs12 -export -out keycert.p12 -in cert.pem -inkey key.pem

6) Create a KeyStore to hold local copy of server certificate
	i) keytool -import -alias server1 -file /path/to/server/cert.pem \
 	   -keystore /path/to/rabbitstore -keypass rabbitstore
					      |->Requires password (min 6 char)
